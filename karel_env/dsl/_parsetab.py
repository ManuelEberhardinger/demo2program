
# _parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C_LBRACE C_RBRACE DEF ELSE E_LBRACE E_RBRACE FRONT_IS_CLEAR IF IFELSE INT I_LBRACE I_RBRACE LEFT_IS_CLEAR MARKERS_PRESENT MOVE M_LBRACE M_RBRACE NOT NO_MARKERS_PRESENT PICK_MARKER PUT_MARKER REPEAT RIGHT_IS_CLEAR RUN R_LBRACE R_RBRACE TURN_LEFT TURN_RIGHT WHILE W_LBRACE W_RBRACEprog : DEF RUN M_LBRACE stmt M_RBRACEstmt : while\n                | repeat\n                | stmt_stmt\n                | action\n                | if\n                | ifelse\n        stmt_stmt : stmt stmt\n        if : IF C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE\n        ifelse : IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE ELSE E_LBRACE stmt E_RBRACE\n        while : WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt W_RBRACE\n        repeat : REPEAT cste R_LBRACE stmt R_RBRACE\n        cond : cond_without_not\n                | NOT C_LBRACE cond_without_not C_RBRACE\n        cond_without_not : FRONT_IS_CLEAR\n                            | LEFT_IS_CLEAR\n                            | RIGHT_IS_CLEAR\n                            | MARKERS_PRESENT\n                            | NO_MARKERS_PRESENT\n        action : MOVE\n                  | TURN_RIGHT\n                  | TURN_LEFT\n                  | PICK_MARKER\n                  | PUT_MARKER\n        cste : INT\n        '
    
_lr_action_items = {'NO_MARKERS_PRESENT':([21,24,27,40,],[29,29,29,29,]),'MARKERS_PRESENT':([21,24,27,40,],[31,31,31,31,]),'MOVE':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[5,-20,-6,-22,-7,-3,-24,5,-21,-2,-23,-5,-4,5,5,5,5,-12,5,5,5,5,5,-11,-9,5,5,-10,]),'I_LBRACE':([42,43,],[47,48,]),'WHILE':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[6,-20,-6,-22,-7,-3,-24,6,-21,-2,-23,-5,-4,6,6,6,6,-12,6,6,6,6,6,-11,-9,6,6,-10,]),'E_RBRACE':([5,8,9,10,12,13,16,17,18,19,20,25,46,53,55,58,59,],[-20,-6,-22,-7,-3,-24,-21,-2,-23,-5,-4,-8,-12,-11,-9,59,-10,]),'E_LBRACE':([56,],[57,]),'DEF':([0,],[2,]),'C_RBRACE':([28,29,30,31,32,33,35,37,38,45,50,],[-15,-19,-16,-18,39,-17,-13,42,43,50,-14,]),'TURN_LEFT':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[9,-20,-6,-22,-7,-3,-24,9,-21,-2,-23,-5,-4,9,9,9,9,-12,9,9,9,9,9,-11,-9,9,9,-10,]),'IFELSE':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[11,-20,-6,-22,-7,-3,-24,11,-21,-2,-23,-5,-4,11,11,11,11,-12,11,11,11,11,11,-11,-9,11,11,-10,]),'RIGHT_IS_CLEAR':([21,24,27,40,],[33,33,33,33,]),'R_RBRACE':([5,8,9,10,12,13,16,17,18,19,20,25,41,46,53,55,59,],[-20,-6,-22,-7,-3,-24,-21,-2,-23,-5,-4,-8,46,-12,-11,-9,-10,]),'W_LBRACE':([39,],[44,]),'W_RBRACE':([5,8,9,10,12,13,16,17,18,19,20,25,46,49,53,55,59,],[-20,-6,-22,-7,-3,-24,-21,-2,-23,-5,-4,-8,-12,53,-11,-9,-10,]),'$end':([1,26,],[0,-1,]),'REPEAT':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[7,-20,-6,-22,-7,-3,-24,7,-21,-2,-23,-5,-4,7,7,7,7,-12,7,7,7,7,7,-11,-9,7,7,-10,]),'M_LBRACE':([3,],[4,]),'I_RBRACE':([5,8,9,10,12,13,16,17,18,19,20,25,46,51,52,53,55,59,],[-20,-6,-22,-7,-3,-24,-21,-2,-23,-5,-4,-8,-12,54,55,-11,-9,-10,]),'LEFT_IS_CLEAR':([21,24,27,40,],[30,30,30,30,]),'PUT_MARKER':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[13,-20,-6,-22,-7,-3,-24,13,-21,-2,-23,-5,-4,13,13,13,13,-12,13,13,13,13,13,-11,-9,13,13,-10,]),'ELSE':([54,],[56,]),'R_LBRACE':([22,23,],[-25,36,]),'M_RBRACE':([5,8,9,10,12,13,14,16,17,18,19,20,25,46,53,55,59,],[-20,-6,-22,-7,-3,-24,26,-21,-2,-23,-5,-4,-8,-12,-11,-9,-10,]),'IF':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[15,-20,-6,-22,-7,-3,-24,15,-21,-2,-23,-5,-4,15,15,15,15,-12,15,15,15,15,15,-11,-9,15,15,-10,]),'FRONT_IS_CLEAR':([21,24,27,40,],[28,28,28,28,]),'RUN':([2,],[3,]),'INT':([7,],[22,]),'TURN_RIGHT':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[16,-20,-6,-22,-7,-3,-24,16,-21,-2,-23,-5,-4,16,16,16,16,-12,16,16,16,16,16,-11,-9,16,16,-10,]),'PICK_MARKER':([4,5,8,9,10,12,13,14,16,17,18,19,20,25,36,41,44,46,47,48,49,51,52,53,55,57,58,59,],[18,-20,-6,-22,-7,-3,-24,18,-21,-2,-23,-5,-4,18,18,18,18,-12,18,18,18,18,18,-11,-9,18,18,-10,]),'C_LBRACE':([6,11,15,34,],[21,24,27,40,]),'NOT':([21,24,27,],[34,34,34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'repeat':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'stmt':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[14,25,25,41,25,49,51,52,25,25,25,58,25,]),'cste':([7,],[23,]),'action':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'while':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ifelse':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'prog':([0,],[1,]),'cond':([21,24,27,],[32,37,38,]),'cond_without_not':([21,24,27,40,],[35,35,35,45,]),'stmt_stmt':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'if':([4,14,25,36,41,44,47,48,49,51,52,57,58,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> DEF RUN M_LBRACE stmt M_RBRACE','prog',5,'p_prog','dsl_prob.py',113),
  ('stmt -> while','stmt',1,'p_stmt','dsl_prob.py',124),
  ('stmt -> repeat','stmt',1,'p_stmt','dsl_prob.py',125),
  ('stmt -> stmt_stmt','stmt',1,'p_stmt','dsl_prob.py',126),
  ('stmt -> action','stmt',1,'p_stmt','dsl_prob.py',127),
  ('stmt -> if','stmt',1,'p_stmt','dsl_prob.py',128),
  ('stmt -> ifelse','stmt',1,'p_stmt','dsl_prob.py',129),
  ('stmt_stmt -> stmt stmt','stmt_stmt',2,'p_stmt_stmt','dsl_prob.py',141),
  ('if -> IF C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE','if',7,'p_if','dsl_prob.py',154),
  ('ifelse -> IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt I_RBRACE ELSE E_LBRACE stmt E_RBRACE','ifelse',11,'p_ifelse','dsl_prob.py',169),
  ('while -> WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt W_RBRACE','while',7,'p_while','dsl_prob.py',188),
  ('repeat -> REPEAT cste R_LBRACE stmt R_RBRACE','repeat',5,'p_repeat','dsl_prob.py',204),
  ('cond -> cond_without_not','cond',1,'p_cond','dsl_prob.py',218),
  ('cond -> NOT C_LBRACE cond_without_not C_RBRACE','cond',4,'p_cond','dsl_prob.py',219),
  ('cond_without_not -> FRONT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','dsl_prob.py',237),
  ('cond_without_not -> LEFT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','dsl_prob.py',238),
  ('cond_without_not -> RIGHT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','dsl_prob.py',239),
  ('cond_without_not -> MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','dsl_prob.py',240),
  ('cond_without_not -> NO_MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','dsl_prob.py',241),
  ('action -> MOVE','action',1,'p_action','dsl_prob.py',264),
  ('action -> TURN_RIGHT','action',1,'p_action','dsl_prob.py',265),
  ('action -> TURN_LEFT','action',1,'p_action','dsl_prob.py',266),
  ('action -> PICK_MARKER','action',1,'p_action','dsl_prob.py',267),
  ('action -> PUT_MARKER','action',1,'p_action','dsl_prob.py',268),
  ('cste -> INT','cste',1,'p_cste','dsl_prob.py',282),
]
